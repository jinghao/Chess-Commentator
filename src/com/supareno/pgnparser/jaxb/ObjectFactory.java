/*
 * ObjectFactory.java
 * 
 * This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
 * See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
 * 
 * Copyright 2008-2010 supareno
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *  	http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.supareno.pgnparser.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.supareno.pgnparser.jaxb package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName site_QNAME = new QName("", "site");
	private final static QName result_QNAME = new QName("", "result");
	private final static QName event_QNAME = new QName("", "event");
	private final static QName white_QNAME = new QName("", "white");
	private final static QName round_QNAME = new QName("", "round");
	private final static QName blackElo_QNAME = new QName("", "blackElo");
	private final static QName date_QNAME = new QName("", "date");
	private final static QName eco_QNAME = new QName("", "eco");
	private final static QName black_QNAME = new QName("", "black");
	private final static QName whiteElo_QNAME = new QName("", "whiteElo");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
	 * {@code com.supareno.pgnparser.jaxb}.
	 */
	public ObjectFactory() { }

	/**
	 * Returns an instance of {@link Game }
	 * @return the Game instance created.
	 */
	public Game createGame() { return new Game(); }

	/**
	 * Returns an instance of {@link Games }.
	 * @return the Games instance created.
	 */
	public Games createGames() { return new Games(); }

	/**
	 * Returns an instance of {@link Hit }.
	 * @return the Hit instance created.
	 */
	public Hit createHit() { return new Hit(); }

	/**
	 * Returns an instance of {@link Hits }
	 * @return the Hits instance created.
	 */
	public Hits createHits() { return new Hits(); }

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "site")
	public JAXBElement<String> createSite(String value) {
		return new JAXBElement<String>(site_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "result")
	public JAXBElement<String> createResult(String value) {
		return new JAXBElement<String>(result_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "event")
	public JAXBElement<String> createEvent(String value) {
		return new JAXBElement<String>(event_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "white")
	public JAXBElement<String> createWhite(String value) {
		return new JAXBElement<String>(white_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "round")
	public JAXBElement<String> createRound(String value) {
		return new JAXBElement<String>(round_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "blackElo")
	public JAXBElement<String> createBlackElo(String value) {
		return new JAXBElement<String>(blackElo_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "date")
	public JAXBElement<String> createDate(String value) {
		return new JAXBElement<String>(date_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "eco")
	public JAXBElement<String> createEco(String value) {
		return new JAXBElement<String>(eco_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "black")
	public JAXBElement<String> createBlack(String value) {
		return new JAXBElement<String>(black_QNAME, String.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
	 */
	@XmlElementDecl(namespace = "", name = "whiteElo")
	public JAXBElement<String> createWhiteElo(String value) {
		return new JAXBElement<String>(whiteElo_QNAME, String.class, null, value);
	}

}
