/*
 * Hit.java
 * 
 * This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10
 * in JDK 6
 * See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
 * 
 * Copyright 2008-2010 supareno
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *  	http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.supareno.pgnparser.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;


/**
 * The {@code Hit} class represents a PGN hit in the international rule.
 * For more details about PGN format, check this link out:<br>
 * {@linkplain http://chess.about.com/library/weekly/aa101202a.htm}
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="number" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * @author supareno
 * @version 1.0
 * @since 2.0
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
		"content"
})
@XmlRootElement(name = "hit")
public class Hit implements Serializable, Comparable<Hit> {

	//
	private static final long serialVersionUID = 7473620251986480347L;

	@XmlValue
	protected String content;
	@XmlAttribute(required = true)
	protected String number;
	
	protected List<String> comments = new ArrayList<String>();

	/**
	 * Returns the value of the hit.
	 * @return the value of the hit.
	 */
	public String getContent() { return content; }

	/**
	 * Sets the value of the hit.
	 * @param value the value of the hit.
	 */
	public void setContent(String value) { this.content = value; }

	/**
	 * Returns a String array of the hit.
	 * @return a String array of the hit.
	 */
	public String[] getHitSeparated(){ return this.content.split(" "); }

	/**
	 * Returns the number of the hit.
	 * @return the number of the hit.
	 */
	public String getNumber() { return number; }

	/**
	 * Sets the number of the hit.
	 * @param value the number of the hit.
	 */
	public void setNumber(String value) { this.number = value; }

	public void addComment(String comment) { this.comments.add(comment); }
	
	public List<String> getComments() { return this.comments; }
	
	@Override
	public int compareTo(Hit obj) { return CompareToBuilder.reflectionCompare(this, obj); }

	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Hit) {
			Hit h = (Hit)obj;
			return h.getNumber().equals(this.getNumber()) &&
				h.getContent().equals(this.getContent());
		}
		return false;
	}
		//return EqualsBuilder.reflectionEquals(this, obj); }

	@Override
	public int hashCode() { return HashCodeBuilder.reflectionHashCode(this); }

	@Override
	public String toString() { return ToStringBuilder.reflectionToString(this); }

}
